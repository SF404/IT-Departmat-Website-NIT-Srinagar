[{"/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/index.js":"1","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/App.js":"2","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Layout/Layout.js":"3","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Dashboard/Dashboard.js":"4","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Layout/Navbar.js":"5","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Auth/Login.js":"6","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Auth/Signup.js":"7"},{"size":350,"mtime":1696434332659,"results":"8","hashOfConfig":"9"},{"size":721,"mtime":1696434970540,"results":"10","hashOfConfig":"9"},{"size":326,"mtime":1696434332658,"results":"11","hashOfConfig":"9"},{"size":16304,"mtime":1696582159277,"results":"12","hashOfConfig":"9"},{"size":5702,"mtime":1696434821892,"results":"13","hashOfConfig":"9"},{"size":1803,"mtime":1696516616615,"results":"14","hashOfConfig":"9"},{"size":2842,"mtime":1696417977498,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"4yh3vw",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"19"},"/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/index.js",[],[],["43"],"/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/App.js",[],[],"/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Layout/Layout.js",["44","45","46"],[],"import { Box, Image } from '@chakra-ui/react'\nimport React from 'react'\nimport img from '../../assets/images/image.png'\nimport Navbar from './Navbar'\nimport { Outlet } from 'react-router-dom'\n\nfunction Layout() {\n    return (\n        <>\n            <Navbar />\n            <Outlet />\n        </>\n    )\n}\n\nexport default Layout\n","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Dashboard/Dashboard.js",["47","48","49","50","51","52","53","54","55","56","57","58"],[],"import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Flex,\n  FormControl,\n  FormLabel,\n  HStack,\n  Image,\n  Input,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverCloseButton,\n  PopoverContent,\n  PopoverHeader,\n  PopoverTrigger,\n  Text,\n  Textarea,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Calendar from \"react-calendar\";\nimport { Link } from \"react-router-dom\";\nimport \"./Calendar.css\";\nimport illustration_A from \"./../../assets/images/illustration_A.png\";\nimport illustration_B from \"./../../assets/images/illustration_B.png\";\nimport illustration_C from \"./../../assets/images/illustration_C.png\";\nimport { DownloadIcon } from \"@chakra-ui/icons\";\n\nfunction Dashboard() {\n  const usertoken = localStorage.getItem(\"usernameToken\");\n  const sidtoken = parseInt(localStorage.getItem(\"sidToken\"));\n\n  const [user, setUser] = useState([]);\n  const [data, setData] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [assignment, setAssignment] = useState([]);\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (sidtoken != null) {\n          const getUser = await axios.get(\n            `http://localhost:8000/api/temp/?sid=${sidtoken}`\n          );\n          setUser(getUser.data[0]);\n          const response = await axios.get(\n            `http://localhost:8000/api/courses/?sid=${sidtoken}`\n          );\n          setCourses(response.data);\n        }\n      } catch (error) {\n        // console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (selectedCourse != null) {\n          const assignment = await axios.get(\n            `http://localhost:8000/api/assignments/?id=${selectedCourse}`\n          );\n          setAssignment(assignment.data);\n          const notes = await axios.get(\n            `http://localhost:8000/api/notes/?id=${selectedCourse}`\n          );\n          setNotes(notes.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [selectedCourse]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (sidtoken != null) {\n          const notes_back = await axios.get(\n            `http://localhost:8000/api/shownotes/`\n          );\n          console.log(notes_back.data);\n          setNotes(notes_back.data);\n          const assignment_back = await axios.get(\n            `http://localhost:8000/api/showassignment/`\n          );\n          console.log(assignment_back.data);\n          setAssignment(assignment_back.data);\n        }\n      } catch (error) {\n        // console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleCourseSelect = (id) => {\n    console.log(id);\n    setSelectedCourse(id);\n  };\n\n  const [assignmnetFormData, setAssignmentFormData] = useState({\n    title: \"\",\n    description: \"\",\n    file: null,\n  });\n\n  const [notesFormData, setNotesFormData] = useState({\n    title: \"\",\n    description: \"\",\n    file: null,\n  });\n\n  const handleChangeAssignment = (e) => {\n    const { name, value } = e.target;\n    setAssignmentFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n  const handleChangeNotes = (e) => {\n    const { name, value } = e.target;\n    setNotesFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleAssignmentSubmit = async (e) => {\n    e.preventDefault();\n    // Perform any action with the form data, like sending it to an API\n    const formData = new FormData();\n    formData.append(\"title\", assignmnetFormData.title);\n    formData.append(\"file\", assignmnetFormData.file);\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/assignmentupload/\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\", // Set the content type to multipart/form-data\n          },\n        }\n      );\n      console.log(\"Response data assignment:\", response.data);\n      // Handle the response data as needed\n    } catch (error) {\n      console.error(\"Error:\", error);\n      // Handle errors here\n    }\n    console.log(\"Form Data:\", assignmnetFormData);\n  };\n  const handleNotesSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", notesFormData.title);\n    formData.append(\"file\", notesFormData.file);\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/notesupload/\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\", // Set the content type to multipart/form-data\n          },\n        }\n      );\n      console.log(\"Response data notes:\", response.data);\n      // Handle the response data as needed\n    } catch (error) {\n      console.error(\"Error:\", error);\n      // Handle errors here\n    }\n    // console.log(\"Form Data:\", assignmnetFormData);\n  };\n\n  return (\n    <>\n      <Flex\n        position={\"fixed\"}\n        bottom={0}\n        top={110}\n        w={\"full\"}\n        bg={\"whitesmoke\"}\n      >\n        <Box minW={\"64px\"} maxW={\"64px\"} bg={\"#d8dcf0\"}></Box>\n        <VStack minW={250} maxW={250} p={3} bg={\"white\"}>\n          <HStack padding={3} w={\"full\"} bg={\"#ebedf7\"} borderRadius={\"2xl\"}>\n            <Popover>\n              <PopoverTrigger>\n                <Avatar cursor={\"pointer\"} name={user.name}></Avatar>\n              </PopoverTrigger>\n              <PopoverContent w={200}>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverBody>\n                  <br />\n                  <Button w={\"full\"} colorScheme=\"facebook\">\n                    My Profile\n                  </Button>\n                  <Divider my={2} />\n                  <Button w={\"full\"} colorScheme=\"telegram\">\n                    Logout\n                  </Button>\n                </PopoverBody>\n              </PopoverContent>\n            </Popover>\n            <Text>{user.name}</Text>\n          </HStack>\n\n          <Divider borderColor={\"blackAlpha.300\"} my={1} />\n\n          {courses.map((item) => (\n            <Button\n              w={\"full\"}\n              justifyContent={\"flex-start\"}\n              flexWrap={\"wrap\"}\n              overflow={\"hidden\"}\n              borderRadius={\"full\"}\n              activeStyle={{ color: \"red\", border: \"2px solid red\" }}\n              key={item.id}\n              onClick={() => handleCourseSelect(item.cid)}\n            >\n              {item.name}\n            </Button>\n          ))}\n\n          <Divider borderColor={\"blackAlpha.300\"} my={1} />\n\n          <Button\n            w={\"full\"}\n            justifyContent={\"flex-start\"}\n            borderRadius={\"full\"}\n            activeStyle={{ color: \"red\" }}\n          >\n            Announcements\n          </Button>\n          <Button\n            w={\"full\"}\n            justifyContent={\"flex-start\"}\n            borderRadius={\"full\"}\n            activeStyle={{ color: \"red\" }}\n          >\n            Alert Messages\n          </Button>\n          <Button\n            w={\"full\"}\n            justifyContent={\"flex-start\"}\n            borderRadius={\"full\"}\n            activeStyle={{ color: \"red\" }}\n          >\n            Manage Events\n          </Button>\n          <Button\n            w={\"full\"}\n            justifyContent={\"flex-start\"}\n            borderRadius={\"full\"}\n            activeStyle={{ color: \"red\" }}\n          >\n            List Students\n          </Button>\n          <Button\n            w={\"full\"}\n            justifyContent={\"flex-start\"}\n            borderRadius={\"full\"}\n            activeStyle={{ color: \"red\" }}\n          >\n            Manage Tutorials\n          </Button>\n        </VStack>\n        <Flex flexGrow={1} position={\"relative\"}>\n          <Flex flexGrow={1} justify={\"space-evenly\"} gap={\"24px\"} p={\"16px\"}>\n            {/* <Box>\n                <Image src={illustration_A} opacity={1} />\n                <Text textAlign={'justify'} mt={-10} bg={'#ebedf7'} fontSize={14} p={3} borderRadius={10}>\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, autem!\n                  Lorem ipsum dolor sit ame\n                </Text>\n\n              </Box>\n\n              <Box>\n                <Image src={illustration_B} opacity={1} />\n                <Text textAlign={'justify'} mt={-10} bg={'#ebedf7'} fontSize={14} p={3} borderRadius={10}>\n                  autem!\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo, aspernatur.\n                </Text>\n\n              </Box>\n              <Box>\n                <Image src={illustration_C} opacity={1} />\n                <Text textAlign={'justify'} mt={-10} bg={'#ebedf7'} fontSize={14} p={3} borderRadius={10}>\n                  Lorem ipsum dolor sit amet consectetur adipisicing elitt amet consectetur adipisicing elit. Illo, aspernatur.\n                </Text>\n\n              </Box> */}\n\n            <Box w={\"full\"} textAlign={\"center\"}>\n              <Text bg={\"#d8dcf0\"} p={2} borderRadius={6}>\n                Notes\n              </Text>\n              <Divider my={2} />\n              <VStack>\n                <Accordion allowToggle w={\"full\"}>\n                  {notes.map((item) => (\n                    <AccordionItem key={item.id}>\n                      <h2>\n                        <AccordionButton>\n                          <Box as=\"span\" flex=\"1\" textAlign=\"left\">\n                            {item.name}\n                          </Box>\n                          <AccordionIcon />\n                        </AccordionButton>\n                      </h2>\n                      <AccordionPanel pb={4}>\n                        <Button>Download</Button>\n                      </AccordionPanel>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n              </VStack>\n              <Divider my={2} />\n              <Accordion allowToggle>\n                <AccordionItem>\n                  <h2>\n                    <AccordionButton bg={\"#d2eafc\"}>\n                      <Box as=\"span\" flex=\"1\" textAlign=\"left\">\n                        Upload Notes\n                      </Box>\n                      <AccordionIcon />\n                    </AccordionButton>\n                  </h2>\n                  <AccordionPanel pb={4}>\n                    <form onSubmit={handleNotesSubmit}>\n                      <FormControl>\n                        <FormLabel>Title</FormLabel>\n                        <Input\n                          type=\"text\"\n                          name=\"title\"\n                          value={notesFormData.title}\n                          onChange={handleChangeNotes}\n                          placeholder=\"Enter title\"\n                        />\n                      </FormControl>\n                      <FormControl mt={4}>\n                        <FormLabel\n                          bg={\"#e5e5e5\"}\n                          p={3}\n                          borderRadius={\"10px\"}\n                          m={0}\n                        >\n                          Upload Notes\n                          {/* <DownloadIcon transform=\"rotate(180deg)\"/> */}\n                        </FormLabel>\n                        <Input\n                          type=\"file\"\n                          name=\"file\"\n                          onChange={handleChangeNotes}\n                          display={\"none\"}\n                        />\n                      </FormControl>\n\n                      <Button\n                        type=\"submit\"\n                        colorScheme=\"facebook\"\n                        mt={4}\n                        w={\"full\"}\n                      >\n                        Upload\n                      </Button>\n                    </form>\n                  </AccordionPanel>\n                </AccordionItem>\n              </Accordion>\n            </Box>\n\n            <Box w={\"full\"} textAlign={\"center\"}>\n              <Text bg={\"#d8dcf0\"} p={2} borderRadius={6}>\n                Assignment\n              </Text>\n              <Divider my={2} />\n              <VStack>\n                <Accordion allowToggle w={\"full\"}>\n                  {assignment.map((item) => (\n                    <AccordionItem key={item.id}>\n                      <h2>\n                        <AccordionButton>\n                          <Box as=\"span\" flex=\"1\" textAlign=\"left\">\n                            {item.name}\n                          </Box>\n                          <AccordionIcon />\n                        </AccordionButton>\n                      </h2>\n                      <AccordionPanel pb={4}>\n                        <Button>Download</Button>\n                      </AccordionPanel>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n              </VStack>\n              <Divider my={2} />\n\n              <Accordion allowToggle>\n                <AccordionItem>\n                  <h2>\n                    <AccordionButton bg={\"#d2eafc\"}>\n                      <Box as=\"span\" flex=\"1\" textAlign=\"left\">\n                        Add New Assignment\n                      </Box>\n                      <AccordionIcon />\n                    </AccordionButton>\n                  </h2>\n                  <AccordionPanel pb={4}>\n                    <form onSubmit={handleAssignmentSubmit}>\n                      <FormControl>\n                        <FormLabel>Title</FormLabel>\n                        <Input\n                          type=\"text\"\n                          name=\"title\"\n                          value={assignmnetFormData.title}\n                          onChange={handleChangeAssignment}\n                          placeholder=\"Enter title\"\n                        />\n                      </FormControl>\n\n                      <FormControl mt={4}>\n                        <FormLabel>Description</FormLabel>\n                        <Textarea\n                          name=\"description\"\n                          value={assignmnetFormData.description}\n                          onChange={handleChangeAssignment}\n                          placeholder=\"Enter description\"\n                        />\n                      </FormControl>\n\n                      <FormControl>\n                        <FormLabel>Deadline</FormLabel>\n                        <Input\n                          type=\"text\"\n                          name=\"title\"\n                          value={assignmnetFormData.deadline}\n                          onChange={handleChangeAssignment}\n                          placeholder=\"Deadline\"\n                        />\n                      </FormControl>\n\n                      <FormControl mt={4}>\n                        <FormLabel\n                          bg={\"#e5e5e5\"}\n                          p={3}\n                          borderRadius={\"10px\"}\n                          m={0}\n                        >\n                          Upload File\n                          {/* <DownloadIcon transform=\"rotate(180deg)\"/> */}\n                        </FormLabel>\n                        <Input\n                          type=\"file\"\n                          name=\"file\"\n                          onChange={handleChangeAssignment}\n                          display={\"none\"}\n                        />\n                      </FormControl>\n\n                      <Button\n                        type=\"submit\"\n                        colorScheme=\"facebook\"\n                        mt={4}\n                        w={\"full\"}\n                      >\n                        Submit\n                      </Button>\n                    </form>\n                  </AccordionPanel>\n                </AccordionItem>\n              </Accordion>\n            </Box>\n          </Flex>\n\n          <Divider orientation=\"vertical\" borderColor={\"blackAlpha.200\"} />\n\n          <VStack h={\"full\"} minW={300} p={4}>\n            <Calendar />\n          </VStack>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n\nexport default Dashboard;\n","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Layout/Navbar.js",["59"],[],"import { Image, Stack } from \"@chakra-ui/react\";\nimport {\n  Box,\n  Flex,\n  Text,\n  Button,\n  VStack,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport mainLogo from \"../../assets/images/download.jpeg\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  return (\n    <>\n      <Box h={\"64px\"} display={\"flex\"} alignItems={\"center\"} px={\"10px\"}>\n        <Image src={mainLogo} h={50} />\n        <Text mx={\"10px\"} fontWeight={\"bold\"}>\n          DEPARTMENT OF INFORMATION TECHNOLOGY <br />{\" \"}\n          <small>National Institute Of Technology, Srinagar</small>\n        </Text>\n      </Box>\n      <Flex\n        align=\"center\"\n        h={\"46px\"}\n        zIndex={9999}\n        justify=\"space-between\"\n        p=\"0\"\n        bg=\"#192e59\"\n        color=\"#192e59\"\n      >\n        {/* <Text fontSize=\"2xl\" fontWeight=\"bold\">\n                    Your Logo\n                </Text> */}\n\n        <Stack\n          direction={\"row\"}\n          spacing=\"2\"\n          align=\"stretch\"\n          display={{ base: \"none\", md: \"flex\" }}\n        >\n          <Button\n            variant=\"ghost\"\n            colorScheme=\"whiteAlpha\"\n            color={\"whiteAlpha.800\"}\n            as={Link}\n            to=\"/\"\n          >\n            Home\n          </Button>\n\n          <Menu>\n            <MenuButton\n              as={Button}\n              variant=\"ghost\"\n              colorScheme=\"whiteAlpha\"\n              color={\"whiteAlpha.800\"}\n            >\n              Academics\n            </MenuButton>\n            <MenuList>\n              <MenuItem as={Link} to=\"/degree_program\">\n                Degree Program\n              </MenuItem>\n              <MenuItem as={Link} to=\"/vision\">\n                Vision and Mission\n              </MenuItem>\n              <MenuItem as={Link} to=\"/outcomes\">\n                Outcomes\n              </MenuItem>\n              <MenuItem as={Link} to=\"/cources\">\n                Courses\n              </MenuItem>\n              <MenuItem as={Link} to=\"/coordinates\">\n                Coordinators\n              </MenuItem>\n              <MenuItem as={Link} to=\"/committee\">\n                Committee\n              </MenuItem>\n              <MenuItem as={Link} to=\"/newsletter\">\n                Department Newsletter\n              </MenuItem>\n            </MenuList>\n          </Menu>\n\n          <Menu>\n            <MenuButton\n              as={Button}\n              variant=\"ghost\"\n              colorScheme=\"whiteAlpha\"\n              color={\"whiteAlpha.800\"}\n            >\n              People\n            </MenuButton>\n            <MenuList>\n              <MenuItem as={Link} to=\"/faculty\">\n                Faculty\n              </MenuItem>\n              <MenuItem as={Link} to=\"/phd_students\">\n                PhD Student\n              </MenuItem>\n              <MenuItem as={Link} to=\"/btech_students\">\n                B-Tech Student\n              </MenuItem>\n              <MenuItem as={Link} to=\"/staff\">\n                Staff\n              </MenuItem>\n            </MenuList>\n          </Menu>\n\n          <Menu>\n            <MenuButton\n              as={Button}\n              variant=\"ghost\"\n              colorScheme=\"whiteAlpha\"\n              color={\"whiteAlpha.800\"}\n            >\n              Research\n            </MenuButton>\n            <MenuList>\n              <MenuItem as={Link} to=\"/areas\">\n                Areas\n              </MenuItem>\n              <MenuItem as={Link} to=\"/papers\">\n                Papers\n              </MenuItem>\n              <MenuItem as={Link} to=\"/labs\">\n                LABs\n              </MenuItem>\n            </MenuList>\n          </Menu>\n\n          <Menu>\n            <MenuButton\n              as={Button}\n              variant=\"ghost\"\n              colorScheme=\"whiteAlpha\"\n              color={\"whiteAlpha.800\"}\n            >\n              Student Activities\n            </MenuButton>\n            <MenuList>\n              <MenuItem as={Link} to=\"/awards\">\n                Awards\n              </MenuItem>\n              <MenuItem as={Link} to=\"/\">\n                Facilities\n              </MenuItem>\n              <MenuItem as={Link} to=\"/\">\n                Placement Brochure\n              </MenuItem>\n              <MenuItem as={Link} to=\"/\">\n                Graduate Batch Photos\n              </MenuItem>\n            </MenuList>\n          </Menu>\n\n          <Menu>\n            <MenuButton\n              as={Button}\n              variant=\"ghost\"\n              colorScheme=\"whiteAlpha\"\n              color={\"whiteAlpha.800\"}\n            >\n              For Faculty\n            </MenuButton>\n            <MenuList>\n              <MenuItem as={Link} to=\"/dashboard\">\n                Dashboard\n              </MenuItem>\n              <MenuItem as={Link} to=\"/login\">\n                Login_Test\n              </MenuItem>\n              <MenuItem as={Link} to=\"/signup\">\n                Signup_Test\n              </MenuItem>\n            </MenuList>\n          </Menu>\n\n          <Button\n            variant=\"ghost\"\n            colorScheme=\"whiteAlpha\"\n            color={\"whiteAlpha.800\"}\n            as={Link}\n            to=\"/about\"\n          >\n            About\n          </Button>\n        </Stack>\n\n        {/* Mobile Navigation Icon */}\n        <IconButton\n          display={{ base: \"flex\", md: \"none\" }}\n          icon={\n            <Box as=\"span\" fontSize=\"xl\">\n              &#9776;\n            </Box>\n          }\n          variant=\"ghost\"\n          colorScheme=\"whiteAlpha\"\n          color={\"whiteAlpha.800\"}\n          onClick={() => {\n            /* Handle mobile menu toggle */\n          }}\n        />\n      </Flex>\n    </>\n  );\n}\n\nexport default Navbar;\n","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Auth/Login.js",["60"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { username, password } = formData;\n    try {\n      console.log(username, password);\n      const response = await axios.post(\n        `http://localhost:8000/api/loginpost/`,\n        formData\n      );\n      if (response.status === 201 && response.data.sid !== undefined) {\n        localStorage.setItem(\"usernameToken\", username);\n        localStorage.setItem(\"sidToken\", response.data.sid);\n        navigate(\"/dashboard\", { state: response.data });\n      } else {\n        console.log(\"status failed\");\n      }\n    } catch (error) {\n      console.log(\"post failed\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/rajesmanna/Documents/Web Project/IT-Departmat-Website-NIT-Srinagar/frontend/src/components/Auth/Signup.js",["61"],[],"import React, { Component } from \"react\";\nimport \"./Signup.css\"; // Import your CSS file\nimport axios from \"axios\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      error: \"\",\n    };\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = async (event) => {\n    const data = 1001;\n    console.log(data);\n    axios\n      .get(`/api/temp/?sid=${data}`)\n      .then((response) => {\n        // Handle the response data here\n        console.log(\"Response:\", response.data);\n      })\n      .catch((error) => {\n        // Handle errors here\n        console.error(\"Error:\", error);\n      });\n    // event.preventDefault();\n    // try {\n    //   const response = await fetch(\"/api/save_teacher/\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       sid,\n    //       name,\n    //       username,\n    //       email,\n    //       password,\n    //       temporary,\n    //     }),\n    //   });\n    //   if (response.ok) {\n    //     // Teacher saved successfully, handle the response as needed\n    //     console.log(\"Teacher saved successfully\");\n    //   } else {\n    //     // Handle error response\n    //     const data = await response.json();\n    //     console.error(data.error);\n    //   }\n    // } catch (error) {\n    //   console.error(\"An error occurred:\", error);\n    // }\n  };\n  render() {\n    const { username, email, password, confirmPassword, error } = this.state;\n    return (\n      <div className=\"signup-container\">\n        <h2>Sign Up</h2>\n        {error && <div className=\"error-message\">{error}</div>}\n        <form onSubmit={this.handleSubmit} className=\"signup-form\">\n          <div>\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={this.handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <button type=\"submit\">Sign Up</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Signup;\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":1,"column":15,"nodeType":"66","messageId":"67","endLine":1,"endColumn":20},{"ruleId":"64","severity":1,"message":"69","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":11},{"ruleId":"64","severity":1,"message":"68","line":15,"column":3,"nodeType":"66","messageId":"67","endLine":15,"endColumn":8},{"ruleId":"64","severity":1,"message":"70","line":22,"column":3,"nodeType":"66","messageId":"67","endLine":22,"endColumn":16},{"ruleId":"64","severity":1,"message":"71","line":31,"column":10,"nodeType":"66","messageId":"67","endLine":31,"endColumn":14},{"ruleId":"64","severity":1,"message":"72","line":33,"column":8,"nodeType":"66","messageId":"67","endLine":33,"endColumn":22},{"ruleId":"64","severity":1,"message":"73","line":34,"column":8,"nodeType":"66","messageId":"67","endLine":34,"endColumn":22},{"ruleId":"64","severity":1,"message":"74","line":35,"column":8,"nodeType":"66","messageId":"67","endLine":35,"endColumn":22},{"ruleId":"64","severity":1,"message":"75","line":36,"column":10,"nodeType":"66","messageId":"67","endLine":36,"endColumn":22},{"ruleId":"64","severity":1,"message":"76","line":39,"column":9,"nodeType":"66","messageId":"67","endLine":39,"endColumn":18},{"ruleId":"64","severity":1,"message":"77","line":43,"column":10,"nodeType":"66","messageId":"67","endLine":43,"endColumn":14},{"ruleId":"64","severity":1,"message":"78","line":43,"column":16,"nodeType":"66","messageId":"67","endLine":43,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":68,"column":6,"nodeType":"81","endLine":68,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"80","line":110,"column":6,"nodeType":"81","endLine":110,"endColumn":8,"suggestions":"83"},{"ruleId":"64","severity":1,"message":"84","line":7,"column":3,"nodeType":"66","messageId":"67","endLine":7,"endColumn":9},{"ruleId":"64","severity":1,"message":"85","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":20},{"ruleId":"64","severity":1,"message":"86","line":64,"column":40,"nodeType":"66","messageId":"67","endLine":64,"endColumn":55},"no-new-object",["87"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'img' is defined but never used.","'PopoverHeader' is defined but never used.","'Link' is defined but never used.","'illustration_A' is defined but never used.","'illustration_B' is defined but never used.","'illustration_C' is defined but never used.","'DownloadIcon' is defined but never used.","'usertoken' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sidtoken'. Either include it or remove the dependency array.","ArrayExpression",["88"],["89"],"'VStack' is defined but never used.","'useHistory' is defined but never used.","'confirmPassword' is assigned a value but never used.","no-object-constructor",{"desc":"90","fix":"91"},{"desc":"90","fix":"92"},"Update the dependencies array to be: [sidtoken]",{"range":"93","text":"94"},{"range":"95","text":"94"},[1787,1789],"[sidtoken]",[3000,3002]]